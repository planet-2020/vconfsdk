apply plugin: 'com.android.library'


version = '3.0.2-SNAPSHOT'
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "ARTIFACT_VERSION", "\"$version\"")
        buildConfigField("String", "TIMESTAMP", "\""+new Date().format("yyyy-MM-dd HH:mm")+"\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

}

dependencies {

    compileOnly project(':annotation')
    annotationProcessor project(':processor')

    implementation 'com.kedacom.vconf.sdk:amulet:1.3.9-SNAPSHOT'
    implementation 'com.kedacom.vconf.sdk:common:1.1.1-SNAPSHOT'
    implementation 'com.kedacom.vconf.sdk:utils:1.1.11-SNAPSHOT' // XXX amulet是通过implementation依赖utils的，传递依赖应该阻断了，为什么dc模块还能通过对amulet的依赖访问到utils？

//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation project(':base')
//    implementation "androidx.lifecycle:lifecycle-common-java8:2.0.0"
//    implementation 'com.kedacom.vconf.sdk:base:1.0.0'
//    implementation ('com.kedacom.vconf.sdk:base:0.4.13-SNAPSHOT@aar'){
//        transitive = true
//    }
//    implementation ('com.kedacom.vconf.sdk:base:0.2.25'){
//        changing = true
//    }

    configurations.all {
        resolutionStrategy {
            // don't cache changing modules at all
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

apply from: '../publish.gradle'
