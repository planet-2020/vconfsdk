package mt;

option java_package = "com.kedacom.mt.netmanage.protobuf";
option java_outer_classname = "StructConfPB";

import "enum.proto";
import "structcommon.proto";



message  TRtcRid
{
	optional string rid=1;
	optional EmMtResolution emres =2;
	optional uint32 bitrate = 3;
}

message  TRtcMedia
{
	optional string    mid=1;
	repeated TRtcRid   ridlist=2;
	optional string    streamid=3;
}

message TRtcMedialist
{
	repeated TRtcMedia  media=1;
}

message  TRtcPlayItem
{
	optional uint64                   play_idx =1;              ///windows是句柄， 硬终端是索引

	optional bool                     is_local=2;               ///是否是本地
	optional EmCodecComponent         local_chan=3;             ///<本地码流
	optional EmCodecComponentIndex    local_chan_idx=4;         ///<本地第几路

	optional string                   streamid=5;               ///流id
	optional EmMtResolution           res = 6;                  ///订阅的分辨率
	optional bool                     is_ass=7;                 ///用于rtcmp区分， 当前的streamid是主流还是双流，进入不同的peerconnection
}

message  TRtcPlayParam
{
	optional  EmMtVmpStyle emstype= 1;
	repeated  TRtcPlayItem playlist= 2;
}

message  TRtcStream
{
	optional string               streamid=1;
	optional TMtId                mtid=2;
	optional bool                 is_audio=3;
	optional bool                 is_ass=4;
	optional uint32               media_idx=5;      ///用在多流，主1， 主2
	repeated EmMtResolution       simcast_res = 6;  ///支持的多个分辨率
}

message  TRtcStreamList
{
	repeated TRtcStream stream=1;
}


message TRtcTlsCfg
{
	optional bool	 is_use_tls = 1;
	optional string  cert_path  = 2;
	optional string  key_path   = 3;
	optional string  ca_path    = 4;
}

message TRtcVendorInfo
{
	optional uint32 vender_type = 1;
	optional string product_id  = 2;
	optional string version_id  = 3;
}

message TRtcRegAuthSet
{
	optional string 		username  = 1;
	optional string 		password  = 2;
	optional EmRtcAlgType   auth_type = 3;
}

//音频编码器统计信息
message TAgentAudEncStatistic
{
    optional uint32 index = 1; //第几路音频码流;从1开始
        optional uint32 bitrate = 2; //上行音频码率
        optional uint32 format = 3;  //音频格式，对应EmAudFormat
        optional bool enc_start = 4;   //是否开始编码
}

//音频解码器统计信息
message TAgentAudDecStatistic
{
    optional uint32 index = 1; //第几路音频码流;从1开始
        optional uint32 pkts_lose = 2; //音频丢包总数
        optional uint32 pkts_loserate = 3; //音频丢包率
        optional uint32 bitrate = 4; //下行音频码率(KB/s)
        optional uint32 format = 5;  //音频格式，对应EmAudFormat
        optional bool dec_start = 6;   //是否开始解码
}

//视频编码器统计信息
message TAgentVidEncStatistic
{
    optional uint32 index = 1; //第几路视频码流;从1开始
        optional bool video_resource_exist = 2; //有无视频源
        optional uint32 framerate = 3; //视频帧率
        optional uint32 bitrate = 4; //上行视频码率(KB/s)
        optional uint32 format = 5;  //视频格式，对应EmVidFormat
        optional uint32 resolution = 6; //分辨率 EmMtResolution
        optional bool enc_start = 7;   //是否开始编码
        optional bool hw_enc_status = 8;   //硬件编码状态
		optional uint32 vid_width = 9; //视频宽度
		optional uint32 vid_height = 10; //视频高度
}

//视频解码器统计信息
message TAgentVidDecStatistic
{
    optional uint32 index = 1; //第几路视频码流;从1开始
        optional uint32 framerate = 2; //视频帧率
        optional uint32 pkts_lose = 3; //视频丢包总数
        optional uint32 pkts_loserate = 4; //视频丢包率
        optional uint32 bitrate = 5; //下行视频码率(KB/s)
        optional uint32 format = 6;  //视频格式，对应EmVidFormat
        optional uint32 resolution = 7; //分辨率 EmMtResolution
        optional bool dec_start = 8;   //是否开始解码
        optional bool hw_dec_status = 9;   //硬件解码状态
		optional uint32 vid_width = 10; //视频宽度
	    optional uint32 vid_height = 11; //视频高度
}

//会议统计信息
message TAgentCodecStatistic
{
    repeated TAgentAudEncStatistic audenc_statics = 1; //音频编码器统计信息
        repeated TAgentAudDecStatistic auddec_statics = 2; //音频解码器统计信息
        repeated TAgentVidEncStatistic pri_videnc_statics = 3; //主视频编码器统计信息
        repeated TAgentVidDecStatistic pri_viddec_statics = 4; //主视频解码器统计信息
        repeated TAgentVidEncStatistic ass_videnc_statics = 5; //辅视频编码器统计信息
        repeated TAgentVidDecStatistic ass_viddec_statics = 6; //辅视频解码器统计信息
}


//呼叫参数
message TMtCallParam
{
  optional EmMtCallMode     call_type = 1;          // 呼叫类型:JOIN|CREATE|INVITE   需UI指定
  optional uint32           call_rate = 2;          // 呼叫速率(kbps)                需UI指定
  optional EmConfProtocol   conf_protocol = 3;      // 通信协议
  optional EmMtAddrType     call_addr_type = 4;     // 呼叫类型，ip, e164, alias
  optional TNetAddr         calling_addr = 5;       // 主叫地址(主叫时可不填)
  optional TNetAddr         called_addr  = 6;       // 被叫地址
  optional TRpMtAlias       calling_alias = 7;      // 主叫别名
  optional TRpMtAlias       called_alias  = 8;      // 被叫别名

  //以下仅用于创建会议, 用于老的setup创会
  optional bool              bcreate_conf = 9;        //是否是创建会议
  optional TMtConfBaseInfo   conf_base_info  = 10;    //基本会议信息
  optional TRpMtAddr         mt_list = 11;            //邀请终端列表

  optional string          peer_product_id = 12;    //对端的productid
  optional string          peer_version_id = 13;    //对端的versionid
  optional uint32          peer_vender_id  = 14;    //对端的厂商id

  optional bool            bencrypt = 15;           //是否加密
  optional EmEndpointType  endpoint_type = 16;      //是mt, mcu，gk
  optional bytes           nonstand = 17;           //非标数据
  optional string          callid   = 18;           //callid值， 给白板会议用
  optional bool            is_peerstack_5p0 =19;    //对端是否是5.0的协议栈
  optional bool            is_vidchanoff = 20;      //关通道
  optional EmSipConnectType    sipconnect_type = 21;      //sip连接方式
  optional TMtKeyIdAndKey      keyid_and_key   =22;
  optional bool                is_qt_call = 23;
  optional bool                is_peer_support_confsub = 24; //平台是否支持订阅功能
  optional TMtQtNstdParam      qt_nstd_param = 25;    //量通呼叫参数
  optional EmEncryptArithmetic emEncryType = 26;			  //加密类型
}

//基本会议信息（ 用于创建会议, 只用于兼容 ）
message TMtConfBaseInfo
{
  ///会议属性
  optional string             conf_id = 1;            //会议ID
  optional string             conf_name = 2;          //会议名称
  optional string             conf_number = 3;        //会议号码
  optional string             conf_pwd  = 4;          //会议密码
  optional bool               bneed_pwd = 5;          //是否需要密码
  optional uint32             conf_duration = 6;		  // 会议持续时间
  optional EmEncryptArithmetic  encry_type = 7;           // 码流加密

  ///音视频格式
  optional EmVidFormat        video_format = 8;				// 会议视频格式(VIDEO_H261等)
  optional EmAudFormat        audio_format = 9;				// 会议音频格式(AUDIO_MP3等)
  optional EmMtResolution     resolution = 10;			    // 会议视频分辨率(VIDEO_CIF等)
  optional EmAacChnlNum       chnl_num = 11;          // 如果音频格式是lc/ld, 需指定声道数
  optional EmVidFormat		  sec_video_format = 12;	// 双流格式
  optional EmMtResolution     sec_vid_res = 13;	      // 双流分辨率
  optional uint32	          sec_vid_fps = 14;		    // 双流帧率
  optional bool               is_auto_vmp = 15;		  	// 是否自动画面合成
  optional bool               is_mix = 16;	  		    // 是否混音

  optional EmH264Profile      vid_h264Profile = 17;     //264profile格式
  optional uint32             conf_bitrate = 18;        //会议码率
}

message TMtOneChanKey
{
  optional int32  chantype = 1;
  optional int32  chanidx = 2;
  optional bytes  keyid = 3;
  optional bytes  key = 4;
  optional int32  keyid_len =5;
}

message TMtKeyIdAndKey
{
  repeated TMtOneChanKey chankey  = 1;
}

message TMtQtNstdParam
{
  optional string   dev_id = 1;
  optional uint32   freq   = 2;
}
